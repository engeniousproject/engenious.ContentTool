<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <TargetFramework>net5.0</TargetFramework>

        <RuntimeIdentifiers>win10-x64;osx-x64;linux-x64</RuntimeIdentifiers>

        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <Description>engenious content-tool for engenious content projects(.ecp).</Description>

        <GenerateResourceUsePreserializedResources>true</GenerateResourceUsePreserializedResources>

        <IncludeBuiltProjectOutputGroup>true</IncludeBuiltProjectOutputGroup>
        <NuspecFile>engenious.ContentTool.Nuget.nuspec</NuspecFile>
        <PackAsTool>true</PackAsTool>
        <NuspecProperties>configuration=$(Configuration);framework=$(TargetFramework)</NuspecProperties>
        <ApplicationIcon />
        <StartupObject />

        <OutputPath>..\bin\$(Configuration)\</OutputPath>

        <PipelineCollectFilesPhaseDependsOn>
            WorkaroundThirdParty;$(PipelineCollectFilesPhaseDependsOn);;
        </PipelineCollectFilesPhaseDependsOn>

        <CopyAllFilesToSingleFolderForPackageDependsOn>true</CopyAllFilesToSingleFolderForPackageDependsOn>
        <LiCoOutput>NOTICE</LiCoOutput>
        <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>
    </PropertyGroup>
    <ItemGroup>
        <None Remove="Resources\Add_folder.png" />
        <None Remove="Resources\Close_file.png" />
        <None Remove="Resources\Create.png" />
        <None Remove="Resources\Equipment.png" />
        <None Remove="Resources\Erase.png" />
        <None Remove="Resources\Eraser.png" />
        <None Remove="Resources\Folder.png" />
        <None Remove="Resources\Import.png" />
        <None Remove="Resources\New_file.png" />
        <None Remove="Resources\Objects.png" />
        <None Remove="Resources\Open_folder.png" />
        <None Remove="Resources\Save.png" />
        <None Remove="Resources\Transparency.png" />
        <None Remove="Resources\Warning.png" />
    </ItemGroup>
    <ItemGroup>
        <Content Include="Resources\Add_folder.png" />
        <Content Include="Resources\Close_file.png" />
        <Content Include="Resources\Create.png" />
        <Content Include="Resources\Equipment.png" />
        <Content Include="Resources\Erase.png" />
        <Content Include="Resources\Eraser.png" />
        <Content Include="Resources\Folder.png" />
        <Content Include="Resources\Import.png" />
        <Content Include="Resources\New_file.png" />
        <Content Include="Resources\Objects.png" />
        <Content Include="Resources\Open_folder.png" />
        <Content Include="Resources\Save.png" />
        <Content Include="Resources\Transparency.png" />
        <Content Include="Resources\Warning.png" />
    </ItemGroup>
    <ItemGroup>
        <Compile Update="Forms\Dialogs\LoadingDialog.cs">
            <SubType>Form</SubType>
        </Compile>
        <Compile Update="Forms\Dialogs\LoadingDialog.Designer.cs">
            <DependentUpon>LoadingDialog.cs</DependentUpon>
        </Compile>
        <Compile Update="Forms\Dialogs\OverwriteDialog.cs">
            <SubType>Form</SubType>
        </Compile>
        <Compile Update="Forms\Dialogs\OverwriteDialog.Designer.cs">
            <DependentUpon>OverwriteDialog.cs</DependentUpon>
        </Compile>
        <Compile Update="Viewer\Viewers\BitmapViewer.cs">
            <SubType>UserControl</SubType>
        </Compile>
        <Compile Update="Viewer\Viewers\SpriteFontViewer.cs">
            <SubType>UserControl</SubType>
        </Compile>
        <Compile Update="Viewer\Viewers\SpriteFontViewer.Designer.cs">
            <DependentUpon>SpriteFontViewer.cs</DependentUpon>
        </Compile>
        <Compile Update="Viewer\Viewers\TextViewer.cs">
            <SubType>UserControl</SubType>
        </Compile>
        <Compile Update="Viewer\Viewers\TextViewer.Designer.cs">
            <DependentUpon>TextViewer.cs</DependentUpon>
        </Compile>
        <EmbeddedResource Update="Forms\Dialogs\LoadingDialog.resx">
            <DependentUpon>LoadingDialog.cs</DependentUpon>
        </EmbeddedResource>
        <EmbeddedResource Update="Forms\Dialogs\OverwriteDialog.resx">
            <DependentUpon>OverwriteDialog.cs</DependentUpon>
        </EmbeddedResource>
        <EmbeddedResource Update="Viewer\Viewers\SpriteFontViewer.resx">
            <DependentUpon>SpriteFontViewer.cs</DependentUpon>
        </EmbeddedResource>
        <EmbeddedResource Update="Viewer\Viewers\TextViewer.resx">
            <DependentUpon>TextViewer.cs</DependentUpon>
        </EmbeddedResource>
        <Compile Update="Viewer\Viewers\EffectModelViewer.Designer.cs">
            <DependentUpon>ModelEffectViewer.cs</DependentUpon>
        </Compile>
    </ItemGroup>
    <ItemGroup>
        <PackageReference Include="LiCo" Version="0.1.11.13-alpha" PrivateAssets="all" />
        <PackageReference Include="Mono.Cecil" Version="0.11.3" />
        <!--    <PackageReference Include="SharpFont.Dependencies" Version="2.6.0" ExcludeAssets="build" />-->
        <PackageReference Include="System.Resources.Extensions" Version="5.0.0" />
        <ProjectReference Include="..\..\engenious\engenious.csproj" Condition="Exists('..\..\engenious\engenious.csproj')" />
        <PackageReference Include="engenious" Version="0.6.2.2-alpha" Condition="!Exists('..\engenious\engenious.csproj')" />

        <ProjectReference Include="..\..\engenious.Pipeline\engenious.Pipeline.csproj" Condition="Exists('..\..\engenious.Pipeline\engenious.Pipeline.csproj')" />
        <PackageReference Include="engenious.Pipeline" Version="0.6.2.5-alpha" Condition="!Exists('..\..\engenious.Pipeline\engenious.Pipeline.csproj')" />

        <PackageReference Include="OpenTK.redist.glfw" Version="3.3.5.18" /> <!-- Patch glfw to newer version -->

        <PackageReference Include="LitGit" Version="0.2.0.55-alpha" PrivateAssets="all" />
    </ItemGroup>
    <ItemGroup>
        <None Include="../LICENSE" />
        <LitGitTemplateReference Include="engenious.ContentTool.Nuget.nuspec.template" />

        <None Update="engenious.ContentTool.Nuget.nuspec" Condition="Exists('engenious.ContentTool.Nuget.nuspec')">
            <DependentUpon>engenious.ContentTool.Nuget.nuspec.template</DependentUpon>
        </None>

    </ItemGroup>
    <!--  <ItemGroup>-->
    <!--    <SharpFontNativeFiles Visible="False" Include="$(NuGetPackageRoot)sharpfont.dependencies/2.6.0/bin/msvc12/**/*.*" Condition="Exists('$(NuGetPackageRoot)sharpfont.dependencies/2.6.0/bin/msvc12/')" />-->

    <!--    <SharpFontTransformedNativeFiles Include="@(SharpFontNativeFiles)">-->
    <!--      <OriginalPath>%(Identity)</OriginalPath>-->
    <!--      <TrimmedName>$([System.String]::Copy('%(Filename)').TrimEnd('6'))</TrimmedName>-->
    <!--      <SavedRecursiveDir>runtimes/win-%(RecursiveDir)native/</SavedRecursiveDir>-->
    <!--      <SavedExtension>%(Extension)</SavedExtension>-->
    <!--    </SharpFontTransformedNativeFiles>-->
    <!--    <None Include="@(SharpFontTransformedNativeFiles->'%(OriginalPath)')" Link="%(SavedRecursiveDir)%(TrimmedName)%(SavedExtension)" CopyToOutputDirectory="PreserveNewest" />-->
    <!--  </ItemGroup>-->

    <Target Name="WorkaroundThirdParty" BeforeTargets="Publish">
        <CallTarget Targets="CreateThirdPartyNotice" />
        <ItemGroup>
            <LiCoOutputFile Include="$(LiCoOutput)" />
        </ItemGroup>
        <PropertyGroup>
            <LiCoOutputFileName>@(LiCoOutputFile->'%(filename)')</LiCoOutputFileName>
            <LiCoOutputFileExtension>@(LiCoOutputFile->'%(extension)')</LiCoOutputFileExtension>
        </PropertyGroup>
        <Copy SourceFiles="$(LiCoOutput)" DestinationFiles="$(PublishDir)/$(LiCoOutputFileName)$(LiCoOutputFileExtension)" />
        <Copy SourceFiles="$(LiCoOutput)" DestinationFiles="$(OutDir)/$(LiCoOutputFileName)$(LiCoOutputFileExtension)" />
    </Target>
</Project>
